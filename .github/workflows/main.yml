name: VXN

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"  # Runs every 2 hours

jobs:
  run-news-pipeline:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Step 3: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install YouTube API dependencies
          pip install --upgrade google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      # Step 4: Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg bc jq mpv
          
      # Step 5: Setup Google Cloud key (decode from base64)
      - name: Setup GC Key
        run: |
          echo "${{ secrets.GCP_KEY }}" | base64 -d > key.json
          
      # Step 5b: Setup YouTube token (decode from base64)
      - name: Setup YouTube token
        run: |
          echo "${{ secrets.TOKEN_KEY }}" | base64 -d > token.json
          
      # Step 5c: Setup YouTube fallback token
      - name: Setup YouTube fallback token
        run: |
          echo "${{ secrets.TOKEN_V2_KEY }}" | base64 -d > token_v2.json

      # Step 6: Make shell scripts executable
      - name: Make shell scripts executable
        run: |
          chmod +x filter.sh
          chmod +x vidmaker.sh
          chmod +x social.sh

      # Step 7: Run main pipeline
      - name: Run VXN News
        run: python3 main.py

      # Step 8: Commit and push headlines.txt if updated
      - name: Commit and push headlines.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if [ -f headlines.txt ]; then
            git add headlines.txt
            if ! git diff --cached --quiet headlines.txt; then
              git commit -m "Update headlines.txt after pipeline run"
              git push origin HEAD:${{ github.ref_name }}
            else
              echo "No changes in headlines.txt, skipping commit."
            fi
          else
            echo "No headlines.txt file found, skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Update GitHub Secrets with refreshed tokens
      - name: Update GitHub Secrets with refreshed tokens
        if: always()
        run: |
          echo "Checking for refreshed YouTube tokens..."

          if [ -f token.json ]; then
            TOKEN_B64=$(base64 -w 0 token.json)
            gh secret set TOKEN_KEY --body "$TOKEN_B64"
            echo "Updated TOKEN_KEY secret."
          fi

          if [ -f token_v2.json ]; then
            TOKEN_V2_B64=$(base64 -w 0 token_v2.json)
            gh secret set TOKEN_V2_KEY --body "$TOKEN_V2_B64"
            echo "Updated TOKEN_V2_KEY secret."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
